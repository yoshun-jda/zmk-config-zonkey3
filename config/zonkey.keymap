#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6
#define JP_DQUOTE       AT                // "

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |                        |  Y  |  U   |  I  |  O  |  P  | 
            // |  A  |  S  |  D  |  F  |  G  |LS(LG(S))|        　 | - |  H  |  J   |  K  |  L  |  `  | 
            // |SHIFT|  Z  |  X  |  C  |  V  |  B  |           | ; |  N  |  M   |  ,  |  .  |  /  | 
            // | CTRL | WIN | ALT |HENKAN|SPACE|MUHENKAN|       | BS | ENT |      　　　　       | DEL |           

            bindings = <
&mt Q TAB         &kp Y         &kp U         &kp COMMA       &kp MINUS                                              &kp P        &kp D            &kp H            &kp W        &kp F
&mt LEFT_SHIFT A  &mt LCTRL I   &mt LCMD E    &mt LEFT_ALT O  &kp PERIOD   &kp LS(LG(KP_NUMBER_4))    &kp MINUS      &kp K        &mt RIGHT_ALT T  &mt RIGHT_GUI N  &mt RCTRL S  &mt RIGHT_SHIFT R
&kp LEFT_SHIFT    &kp Z         &kp X         &kp C           &kp V        &kp SLASH                  &kp SEMICOLON  &kp G        &kp M            &kp L            &lt 5 B      &kp J
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 5 TAB       &lt 1 SPACE  &lt 2 ENTER                               &lt 3 ENTER  &lt 4 BACKSPACE                                                   &kp SLASH
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_1 {
            // -----------------------------------------------------------------------------------------
            // | 半角/全角 |CAPS|     |     |     |                     |     |     |  -  |  ^  |  ¥  |
            // | TAB |     |     |     |     |     |              |    |     |     |     |  @  |  [  |
            // |SHIFT|     |     |     |     |     |            | 英数 | かな |     |     |     |  ]  |
            // | CTRL| WIN | ALT |HENKAN|SPACE|MUHENKAN|         | BS | ENT |                   | DEL |

            bindings = <
&kp TILDE              &kp LS(N7)        &kp LS(N8)        &kp LS(N9)        &kp LS(N0)                               &kp RIGHT_BRACE  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET
&kp GRAVE              &kp LS(NUMBER_4)  &kp LS(N5)        &kp LS(NUMBER_6)  &kp LESS_THAN     &trans       &kp PLUS  &kp LEFT_BRACE   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LEFT_BRACKET
&mt LEFT_SHIFT LS(N0)  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp GREATER_THAN  &kp EQUAL    &trans    &kp N0           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PIPE
&kp MINUS              &kp LEFT_WIN      &kp LEFT_ALT      &trans            &trans            &trans                 &trans           &trans                                                       &kp BACKSLASH
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            // -----------------------------------------------------------------------------------------
            // |  1  |  2  |  3  |  4  |  5  |                     |  6  |  7  |  8  |  9  |   0  |
            // |      |     |     |     |     |     |           |    |     |     |     |  ↑  |      |
            // |SHIFT|     |     |     |     |     |           |     |     |     |  ←  |  ↓  |  →  |
            // | CTRL| WIN | ALT |HENKAN|SPACE|MUHENKAN|         | BS | ENT |                   | DEL |

            bindings = <
&kp C_BRI_UP                         &kp C_BRI_DN      &kp F3        &kp LS(LG(NUMBER_2))           &kp LS(LG(NUMBER_4))                      &kp F8    &kp K_VOLUME_UP  &kp K_VOLUME_DOWN  &kp F12          &trans
&mt LEFT_SHIFT LS(LC(LG(NUMBER_4)))  &kp LC(LEFT)      &kp LG(LEFT)  &mt LEFT_ALT LS(LG(UP_ARROW))  &kp LA(RIGHT)           &trans    &trans  &kp LEFT  &kp UP_ARROW     &kp RIGHT          &kp RIGHT_SHIFT  &trans
&kp LEFT_SHIFT                       &kp LS(LG(LEFT))  &trans        &trans                         &kp LG(LS(DOWN_ARROW))  &trans    &trans  &trans    &trans           &kp LEFT_ARROW     &trans           &trans
&kp LCTRL                            &kp LEFT_WIN      &kp LEFT_ALT  &trans                         &trans                  &trans            &trans    &kp RIGHT_GUI                                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            // -----------------------------------------------------------------------------------------
            // | F1  | F2  | F3  | F4  | F5  |                     | F6  | F7 | F8  | F9 | F10 |
            // | F11 | F12 |     |     |     |     |           |    |     |     |     |     |      |
            // |SHIFT|     |     |     |     |     |           |     |     |     |     |     |      |
            // | CTRL| WIN | ALT |HENKAN|SPACE|MUHENKAN|         | BS | ENT |                   | DEL |

            bindings = <
&kp ESCAPE      &kp F2             &kp LS(LG(NUMBER_2))  &kp LC(LG(R))      &kp LS(LG(NUMBER_4))                              &kp K_VOLUME_UP  &kp K_VOLUME_DOWN     &kp LG(N7)             &kp LG(N8)  &kp RG(N9)
&trans          &kp LS(LESS_THAN)  &kp LS(GREATER_THAN)  &trans             &trans                &bootloader    &trans       &trans           &kp RG(LEFT_BRACKET)  &kp RG(RIGHT_BRACKET)  &trans      &kp RG(RC(ENTER))
&kp LEFT_SHIFT  &trans             &kp LG(LC(LEFT))      &kp LG(LC(RIGHT))  &trans                &trans         &bootloader  &trans           &kp LS(LG(LEFT))      &kp RS(RG(RIGHT))      &trans      &bootloader
&sys_reset      &trans             &kp LG(LA(ESCAPE))    &trans             &trans                &trans                      &trans           &trans                                                                      &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_4 {
            // -----------------------------------------------------------------------------------------
            // | BT0 | BT1 | BT2 | BT3 | BT4 |                |  -  |  7  |  8  |  9  |  +  |
            // |BTCLR |     |     |     |     |     |           |  /  |  4  |  5  |  6  |  *  | 
            // |SHIFT|     |     |     |     |     |           |  0  |  1  |  2  |   3 |  .  |  =  |
            // | CTRL| WIN | ALT |HENKAN|SPACE|MUHENKAN|        | BS | ENT |                  | DEL |

            bindings = <
&bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4                                       &kp MINUS        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS
&bt BT_CLR      &bt BT_CLR_ALL  &trans        &trans          &trans        &trans              &trans           &kp SLASH        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK
&kp LEFT_SHIFT  &trans          &trans        &trans          &trans        &trans              &kp KP_NUMBER_0  &kp KP_NUMBER_1  &mkp MB1         &mkp MB2         &kp PERIOD       &kp EQUAL
&kp LCTRL       &kp LEFT_WIN    &kp LEFT_ALT  &kp INT_HENKAN  &kp SPACE     &kp INT_MUHENKAN                     &kp BACKSPACE    &kp ENTER                                                        &kp DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |                     |     |     |     |     |      |
            // |      |     |     |     |     |     |           |    |     |     |     |     |      |
            // |SHIFT|     |     |     |     |     |          |     |     |     |     |     |      |
            // | CTRL| WIN | ALT |HENKAN|SPACE|MUHENKAN|        | BS | ENT |                  | DEL |

            bindings = <
&trans          &trans        &trans        &trans          &trans                                 &trans         &trans     &trans  &trans  &trans
&trans          &trans        &trans        &trans          &trans     &trans              &trans  &trans         &trans     &trans  &trans  &trans
&kp LEFT_SHIFT  &trans        &trans        &trans          &trans     &trans              &trans  &trans         &trans     &trans  &trans  &trans
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &kp INT_HENKAN  &kp SPACE  &kp INT_MUHENKAN            &kp BACKSPACE  &kp ENTER                          &kp DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans                              &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
